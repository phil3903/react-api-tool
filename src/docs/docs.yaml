name: fruit_counter
displayName: Fruit Counter
environments:
  - name: development
    displayName: Development
    ssl: false
    url: localhost
    port: 8080
    base: api
  - name: production
    displayName: Production
    ssl: true
    url: production-endpoint.com
    port: 3000
    base: api
  - name: staging
    displayName: Staging
    ssl: false
    url: staging-endpoint.net
    port: 1337
    base: api
routes:
  #POST
  - name: add_new_fruit
    displayName: Add New Fruit
    group: Fruit
    method: post
    description: >
     Add a fruit to the collection
    endpoint: fruits
    body:
      - name: name
        type: string
        required: true
        description: This is the name of the fruit.
        choices:
          - Banana
          - Apple
          - Orangem

      - name: count
        type: Number
        required: false
        description: Indicates how many of each fruit you own.
        default: 0
  #PUT
  - name: update_fruit_by_id
    displayName: Update Fruit By ID
    method: put
    group: Fruit
    description: >
      Update a fruit.
      This is a long description,
      and will render as a single line.
    endpoint: fruits/:id
    body:
      - name: count
        type: number
        description: The number of fruits.

      - name: name
        type: String
        description: >
          String value assigned to the fruit.

  #DELETE
  - name: delete_all_fruit
    displayName: Delete All Fruit
    method: delete
    description: >
      Removes all fruit from collection
    endpoint: fruits

  - name: delete_by_id
    method: delete
    displayName: Delete Fruit By ID
    endpoint: fruits/:id
  #GET
  - name: get_all
    displayName: Get All Fruit
    method: get
    group: Fruit
    endpoint: fruits
    query:
      - name: page
        type: Number
        required: false
        default: 1
        description: >
          The page number of the results.

      - name: limit
        type: Number
        required: false
        default: 10
        description: >
          The number of results returned per page.

    description: >
      Returns all fruit present in the database.
    example:
      description: This is where an example description would go.
      value: |
        {
          "page": 1,
          "limit": 10
        }

  - name: get_fruit_by_id
    displayName: Get Fruit By ID
    method: get
    endpoint: fruits/:id
    params:
      - name: id
        type: String
        required: true
        default: null
        description: >
          The page number of the results.



